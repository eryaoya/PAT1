#include<stdio.h>
#include<string.h>
//本题要求计算 A/B，其中 A 是不超过 1000 位的正整数，B 是 1 位正整数。你需要输出商数 Q 和余数 R，使得 A=B*Q+R 成立。
//输入格式：
//输入在一行中依次给出 A 和 B，中间以 1 空格分隔。
//输出格式：
//在一行中依次输出 Q 和 R，中间以 1 空格分隔。 
int main(){
	//定义一个数组存储输入的字符串 
	char num[1000];
	//len是字符串长度，N是除数 
	int len,N;
	//输入字符串，除数，分别赋值给num，N 
	scanf("%s %d",&num,&N);
	//使用<string.h>中的库函数得到字符串长度 
	len=strlen(num);
	//t是整除出来的，r是余数，k是过渡用的 
	int t,r,k;
	//对字符串第一位做除法 
	t=(num[0]-'0')/N;
	r=(num[0]-'0')%N;
	//若第一位商数不为0且字符串长度大于1 
	if(t!=0 && len>1){
		//采用竖式除法的思考方式，每一位除以N的商数输出，余数乘以10进入下一次运算 
		for(int i=1;i<=len-1;i++){
			printf("%d",t);
			k=r*10+num[i]-'0';
			t=k/N;
			r=k%N;
		}
		//到最后一位补充上 
		printf("%d %d",t,r);
	}
	//若第一位除以N的商数为0，且字符串长度大于1，这个0是不需要输出的 
	else if(t==0 && len>1){
		for(int i=1;i<=len-1;i++){
			//逻辑同上，调整printf的位置 
			k=r*10+num[i]-'0';
			t=k/N;
			r=k%N;
			printf("%d",t);
		}
		printf(" %d",r);
	}
	//若字符串只有一位，不管t是不是0，都要输出 
	else{
		printf("%d %d",t,r);
	}
	return 0;
}
